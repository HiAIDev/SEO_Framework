Index: autodescription.php
===================================================================
--- autodescription.php	(revision 1302381)
+++ autodescription.php	(working copy)
@@ -3,7 +3,7 @@
  * Plugin Name: The SEO Framework
  * Plugin URI: https://wordpress.org/plugins/autodescription/
  * Description: The SEO Framework makes sure your SEO is always up-to-date without any configuration needed. It's based upon the Genesis SEO.
- * Version: 2.4.2
+ * Version: 2.4.3
  * Author: Sybre Waaijer
  * Author URI: https://cyberwire.nl/
  * License: GPLv3
@@ -47,7 +47,7 @@
  * Removed previous constant.
  * @since 2.3.5
  */
-define( 'THE_SEO_FRAMEWORK_VERSION', '2.4.2' );
+define( 'THE_SEO_FRAMEWORK_VERSION', '2.4.3' );
 
 /**
  * Plugin options filter
Index: inc/classes/doingitright.class.php
===================================================================
--- inc/classes/doingitright.class.php	(revision 1300916)
+++ inc/classes/doingitright.class.php	(working copy)
@@ -62,10 +62,10 @@
 				 * Always load pages and posts.
 				 * Many plugins rely on these.
 				 */
-				add_action( "manage_posts_columns", array( $this, 'add_column' ), 10, 1 );
-				add_action( "manage_pages_columns", array( $this, 'add_column' ), 10, 1 );
-				add_action( "manage_posts_custom_column", array( $this, 'seo_column' ), 10, 3 );
-				add_action( "manage_pages_custom_column", array( $this, 'seo_column' ), 10, 3 );
+				add_action( 'manage_posts_columns', array( $this, 'add_column' ), 10, 1 );
+				add_action( 'manage_pages_columns', array( $this, 'add_column' ), 10, 1 );
+				add_action( 'manage_posts_custom_column', array( $this, 'seo_column' ), 10, 3 );
+				add_action( 'manage_pages_custom_column', array( $this, 'seo_column' ), 10, 3 );
 			}
 
 		}
@@ -491,7 +491,7 @@
 				if ( $tit_len < 25 ) {
 					$titlen_notice = $title_i18n . ' ' . __( 'far too short.', 'autodescription' );
 					$titlen_class = $bad;
-				} else if ( $tit_len < 50 ) {
+				} else if ( $tit_len < 42 ) {
 					$titlen_notice = $title_i18n . ' ' . __( 'too short.', 'autodescription' );
 					$titlen_class = $okay;
 				} else if ( $tit_len > 55 && $tit_len < 75 ) {
Index: inc/classes/generate.class.php
===================================================================
--- inc/classes/generate.class.php	(revision 1302381)
+++ inc/classes/generate.class.php	(working copy)
@@ -519,7 +519,7 @@
 	 * 		@param bool page_on_front Page on front condition for example generation.
 	 * 		@param bool placeholder Generate placeholder, ignoring options.
 	 * 		@param bool notagline Generate title without tagline.
-	 * 		@param bool meta Ignore doint_it_wrong. Used in og:title/twitter:title
+	 * 		@param bool meta Ignore doing_it_wrong. Used in og:title/twitter:title
 	 * 		@param bool get_custom_field Do not fetch custom title when false.
 	 * 		@param bool description_title Fetch title for description.
 	 * 		@param bool is_front_page Fetch front page title.
@@ -586,14 +586,26 @@
 		 * @since 2.2.5
 		 */
 		if ( ! $args['meta'] ) {
-			if ( ! empty( $seplocation ) && doing_filter( 'wp_title' ) && ! $this->detect_theme_support( 'title-tag' ) ) {
-				// Don't disturb the precious title when WP_DEBUG is on.
-				add_action( 'wp_footer', array( $this, 'title_doing_it_wrong' ), 20 );
+			if ( ! $this->detect_theme_support( 'title-tag' ) && doing_filter( 'wp_title' ) ) {
+				if ( ! empty( $seplocation ) ) {
+					// Don't disturb the precious title when WP_DEBUG is on.
+					add_action( 'wp_footer', array( $this, 'title_doing_it_wrong' ), 20 );
 
-				//* Notify cache.
-				$this->title_doing_it_wrong = true;
+					//* Notify cache.
+					$this->title_doing_it_wrong = true;
 
-				return $this->build_title_doingitwrong( $title, $sep, $seplocation, $args );
+					return $this->build_title_doingitwrong( $title, $sep, $seplocation, $args );
+				} else if ( ! empty( $sep ) ) {
+					// Don't disturb the precious title when WP_DEBUG is on.
+					add_action( 'wp_footer', array( $this, 'title_doing_it_wrong' ), 20 );
+
+					//* Notify cache.
+					$this->title_doing_it_wrong = true;
+
+					$args['empty_title'] = true;
+
+					return $this->build_title_doingitwrong( $title, $sep, $seplocation, $args );
+				}
 			}
 		}
 
@@ -762,6 +774,20 @@
 		if ( is_front_page() )
 			return $title = '';
 
+		/**
+		 * When using an empty wp_title() function, outputs are unexpected.
+		 * This small piece of code will fix all that.
+		 * By removing the separator from the title and adding the blog name always to the right.
+		 * Which is always the case with doing_it_wrong.
+		 *
+		 * @thanks JW_ https://wordpress.org/support/topic/wp_title-problem-bug
+		 * @since 2.4.3
+		 */
+		if ( isset( $args['empty_title'] ) ) {
+			$title = trim( str_replace( $sep, '', $title ) );
+			$seplocation = 'right';
+		}
+
 		if ( empty( $args ) )
 			$args = $this->parse_title_args( '', '', true );
 
@@ -876,6 +902,7 @@
 				$private_title_format = apply_filters( 'private_title_format', __( 'Private: %s', 'autodescription' ), $post );
 				$title = sprintf( $private_title_format, $title );
 			}
+
 		}
 
 		$title = wptexturize( $title );
@@ -1001,7 +1028,6 @@
 			$title = (string) $this->generate_title( $args['term_id'], $args['taxonomy'], $escape = false );
 		}
 
-
 		/**
 		 * From WordPress core get_the_title.
 		 * Bypasses get_post() function object which causes conflict with some themes and plugins.
@@ -1013,10 +1039,15 @@
 		 *
 		 * @since 2.4.1
 		 *
+		 * @global $page
+		 * @global $paged
+		 *
 		 * @applies filters core : protected_title_format
 		 * @applies filters core : private_title_format
 		 */
 		if ( ! $args['description_title'] ) {
+			global $page, $paged;
+
 			$post = get_post( $args['term_id'], OBJECT );
 
 			if ( isset( $post->post_password ) && ! empty( $post->post_password ) ) {
@@ -1027,16 +1058,39 @@
 				$title = sprintf( $private_title_format, $title );
 			}
 
+			/**
+			 * @since 2.4.3
+			 * Adds page numbering within the title.
+			 */
+			if ( ! is_404() && ( $paged >= 2 || $page >= 2 ) )
+				$title .= " $sep " . sprintf( __( 'Page %s', 'autodescription' ), max( $paged, $page ) );
+
 			//* Title for title (meta) tags.
 			if ( $is_front_page && ! $add_tagline ) {
 				//* Render frontpage output without tagline
 				$title = $blogname;
-			} else if ( $seplocation == 'right' ) {
-				$title = $title . " $sep " . $blogname;
-			} else {
-				$title = $blogname . " $sep " . $title;
 			}
 
+			/**
+			 * Applies filters the_seo_framework_add_blogname_to_title.
+			 * @since 2.4.3
+			 */
+			$add_blogname = (bool) apply_filters( 'the_seo_framework_add_blogname_to_title', true );
+
+			/**
+			 * On frontpage: Add title if add_tagline is true.
+			 * On all other pages: Add tagline if filters $add_blogname is true.
+			 *
+			 * @since 2.4.3
+			 */
+			if ( ( $add_blogname && ! $is_front_page ) || ( $is_front_page && $add_tagline ) ) {
+				if ( 'right' == $seplocation ) {
+					$title = $title . " $sep " . $blogname;
+				} else {
+					$title = $blogname . " $sep " . $title;
+				}
+			}
+
 			$title = wptexturize( $title );
 			$title = convert_chars( $title );
 			$title = esc_html( $title );
@@ -1142,12 +1196,6 @@
 			 * @global $post
 			 */
 			$title = isset( $post->post_title ) ? $post->post_title : $title;
-
-			/**
-			 * Not anymore!
-			 * @since 2.4.1
-			 */
-			//$title = get_the_title( get_queried_object_id() );
 		}
 
 		//* You forgot to enter a title "anywhere"!
@@ -1707,11 +1755,7 @@
 
 		//* WPML support.
 		if ( defined( 'ICL_LANGUAGE_CODE' ) && ! is_admin() && isset( $post->guid ) ) {
-			$neg_offset = (int) - strlen( ICL_LANGUAGE_CODE );
-
-			//* Only add if ICL Language is available is guid.
-			if ( strrpos( $post->guid, '/' . ICL_LANGUAGE_CODE, $neg_offset ) !== false )
-				$path = ICL_LANGUAGE_CODE . '/' . $path;
+			$path = $this->get_relative_wmpl_url( $path, $post );
 		}
 
 		//* qTranslate X support. Doesn't need to work on sitemaps.
@@ -1734,7 +1778,7 @@
 
 				//* Add prefix.
 				if ( ! $hide || $current_lang != $default_lang )
-					$path = $current_lang . '/' . $path;
+					$path = '/' . $current_lang . '/' . ltrim( $path, '\/ ' );
 
 			}
 		}
@@ -1743,6 +1787,101 @@
 	}
 
 	/**
+	 * Generate relative WPML url.
+	 *
+	 * @param string $path The current path.
+	 * @param string $post The Post Object.
+	 *
+	 * @since 2.4.3
+	 *
+	 * @return relative path for WPML urls.
+	 */
+	public function get_relative_wmpl_url( $path, $post ) {
+		global $sitepress;
+
+		$post_guid = $post->guid;
+
+		if ( isset( $sitepress ) ) {
+			$negotiation_type = $sitepress->get_setting( 'language_negotiation_type' );
+
+			//* If negotiation_type is 2, the home_url will handle this.
+
+			if ( $negotiation_type == 1 ) {
+				//* Language is path.
+
+				$icl_gl_exists = function_exists( 'icl_get_languages' );
+
+				if ( $icl_gl_exists && strpos( $post_guid, 'lang=' ) !== false ) {
+					//* Language is found in query arg.
+
+					//* Fetch first directory path
+					$lang_path = explode( '/', $path );
+					$lang_path = isset( $lang_path[1] ) ? $lang_path[1] : '';
+
+					if ( !empty( $lang_path ) ) {
+						//* Directory path parsed succesfully.
+
+						$language_keys = array_keys( icl_get_languages() );
+						if ( ! empty( $language_keys ) && ! in_array( $lang_path, $language_keys ) ) {
+							//* Language code isn't found in first part of path. Add it.
+
+							$path = '/' . $lang_path . '/' . ltrim( $path, '\/ ' );
+						}
+					}
+				} else {
+
+					$neg_offset = (int) - strlen( ICL_LANGUAGE_CODE );
+
+					//* Only add if ICL Language is available in guid.
+					if ( strpos( $post_guid, '/' . ICL_LANGUAGE_CODE . '/' ) !== false ) {
+						//* Language path is found in GUID.
+
+						if ( strpos( $path, '/' . ICL_LANGUAGE_CODE . '/' ) === false ) {
+							//* Language path isn't found in permalink. Add it.
+
+							$path = '/' . ICL_LANGUAGE_CODE . '/' . ltrim( $path, '\/ ' );
+						}
+
+					} else if ( $icl_gl_exists && strpos( $post_guid, 'lang=' ) !== false ) {
+						//* Language is found in query arg.
+
+						//* Fetch first directory path
+						$lang_path = explode( '/', $path );
+						$lang_path = $lang_path[1];
+
+						if ( ! empty( $lang_path ) ) {
+							//* Directory path parsed succesfully.
+
+							$language_keys = array_keys( icl_get_languages() );
+							if ( !empty( $language_keys ) && in_array( $lang_path, $language_keys ) ) {
+								//* Language code isn't found in first part of path. Add it.
+
+								$path = '/' . $lang_path . '/' . ltrim( $path, '\/ ' );
+							}
+						}
+					}
+				}
+
+			} else if ( $negotiation_type == 3 ) {
+				//* Language names are parameters.
+
+				// @TODO parse slashit.
+
+				if ( false !== strpos( $post_guid, 'lang=' ) ) {
+					//* Add language parameter.
+
+					$parsed_url = parse_url( $post_guid );
+					parse_str( $parts['query'], $queries );
+
+					$path = user_trailingslashit( $path ) . '?lang=' . $queries['lang'];
+				}
+			}
+		}
+
+		return $path;
+	}
+
+	/**
 	 * Generates relative URL for current term.
 	 *
 	 * @global WP_Query object $wp_query
@@ -1929,26 +2068,30 @@
 		if ( $this->is_domainmapping_active() ) {
 			global $wpdb,$blog_id;
 
+			$mapped_key = 'wpmudev_mapped_domain_' . $blog_id;
+
 			//* Check if the domain is mapped
-			$mapped_domain = wp_cache_get( 'wap_mapped_domain_' . $blog_id, 'domain_mapping' );
+			$mapped_domain = $this->object_cache_get( $mapped_key );
 			if ( false === $mapped_domain ) {
-				$mapped_domain = $wpdb->get_var( $wpdb->prepare( "SELECT domain FROM {$wpdb->base_prefix}domain_mapping WHERE blog_id = %d", $blog_id ) ); //string
-				wp_cache_set( 'wap_mapped_domain_' . $blog_id, $mapped_domain, 'domain_mapping', 3600 ); // 1 hour
+				$mapped_domain = $wpdb->get_var( $wpdb->prepare( "SELECT domain FROM {$wpdb->base_prefix}domain_mapping WHERE blog_id = %d", $blog_id ) );
+				$this->object_cache_set( $mapped_key, $mapped_domain, 3600 );
 			}
 
 			if ( !empty( $mapped_domain ) ) {
 
+				$scheme_key = 'wpmudev_mapped_scheme_' . $blog_id;
+
 				//* Fetch scheme
-				$mappedscheme = wp_cache_get( 'wap_mapped_scheme_' . $blog_id, 'domain_mapping' );
+				$mappedscheme = $this->object_cache_get( $scheme_key );
 				if ( false === $mappedscheme ) {
-					$mappedscheme = $wpdb->get_var( $wpdb->prepare( "SELECT scheme FROM {$wpdb->base_prefix}domain_mapping WHERE blog_id = %d", $blog_id ) ); //bool
-					wp_cache_set('wap_mapped_scheme_' . $blog_id, $mappedscheme, 'domain_mapping', 3600 ); // 1 hour
+					$mappedscheme = $wpdb->get_var( $wpdb->prepare( "SELECT scheme FROM {$wpdb->base_prefix}domain_mapping WHERE blog_id = %d", $blog_id ) );
+					$this->object_cache_set( $scheme_key, $mappedscheme, 3600 );
 				}
 
 				if ( $mappedscheme === '1' ) {
 					$scheme_full = 'https://';
 					$scheme = 'https';
-				} else if ( $mappedscheme === '0' ) {
+				} else {
 					$scheme_full = 'http://';
 					$scheme = 'http';
 				}
@@ -3009,8 +3152,14 @@
 			return '';
 
 		$knowledge_type = $this->get_option( 'knowledge_type' );
-		$knowledge_name = $knowledge_type ? $knowledge_type : get_bloginfo( 'name', 'raw' );
 
+		/**
+		 * Forgot to add this.
+		 * @since 2.4.3
+		 */
+		$knowledge_name = $this->get_option( 'knowledge_name' );
+		$knowledge_name = $knowledge_name ? $knowledge_name : get_bloginfo( 'name', 'raw' );
+
 		$context = json_encode( 'http://schema.org' );
 		$type = json_encode( ucfirst( $knowledge_type ) );
 		$name = json_encode( $knowledge_name );
Index: inc/classes/init.class.php
===================================================================
--- inc/classes/init.class.php	(revision 1302381)
+++ inc/classes/init.class.php	(working copy)
@@ -27,6 +27,15 @@
 class AutoDescription_Init {
 
 	/**
+	 * Allow object caching through a filter.
+	 *
+	 * @since 2.4.3
+	 *
+	 * @var bool Enable object caching.
+	 */
+	protected $use_object_cache = true;
+
+	/**
 	 * Constructor. Init actions.
 	 *
 	 * @since 2.1.6
@@ -36,6 +45,13 @@
 		add_action( 'init', array( $this, 'autodescription_run' ), 1 );
 		add_action( 'template_redirect', array( $this, 'custom_field_redirect') );
 
+		/**
+		 * Applies filters : the_seo_framework_use_object_cache
+		 *
+		 * @since 2.4.3
+		 */
+		$this->use_object_cache = (bool) apply_filters( 'the_seo_framework_use_object_cache', true );
+
 	}
 
 	/**
@@ -211,7 +227,9 @@
 			$indicatorafter = '<!-- End The Seo Framework' . ( $sybre ? ' by Sybre Waaijer' : '' ) . ' -->' . "\r\n";
 		}
 
-		$output = wp_cache_get( 'seo_framework_output_' . $key . '_' . $paged . '_' . $page, 'theseoframework' );
+		$cache_key = 'seo_framework_output_' . $key . '_' . $paged . '_' . $page;
+
+		$output = $this->object_cache_get( $cache_key );
 		if ( false === $output ) {
 
 			/**
@@ -296,7 +314,7 @@
 
 			$output = "\r\n" . $indicatorbefore . $robots . $before . $before_actions . $output . $after_actions . $after . $generator;
 
-			wp_cache_set( 'seo_framework_output_' . $key . '_' . $paged . '_' . $page, $output, 'theseoframework', 86400 );
+			$this->object_cache_set( $cache_key, $output, 86400 );
 		}
 
 		/**
@@ -364,6 +382,49 @@
 	}
 
 	/**
+	 * Object cache set wrapper.
+	 * Applies filters 'the_seo_framework_use_object_cache' : Disable object
+	 * caching for this plugin, when applicable.
+	 *
+	 * @param string $key The Object cache key.
+	 * @param mixed $data The Object cache data.
+	 * @param int $expire The Object cache expire time.
+	 * @param string $group The Object cache group.
+	 *
+	 * @since 2.4.3
+	 *
+	 * @return void
+	 */
+	public function object_cache_set( $key, $data, $expire = 0, $group = 'the_seo_framework' ) {
+
+		if ( $this->use_object_cache )
+			wp_cache_set( $key, $data, $group, $expire );
+
+	}
+
+	/**
+	 * Object cache get wrapper.
+	 * Applies filters 'the_seo_framework_use_object_cache' : Disable object
+	 * caching for this plugin, when applicable.
+	 *
+	 * @param string $key The Object cache key.
+	 * @param string $group The Object cache group.
+	 * @param bool $force Wether to force an update of the local cache.
+	 * @param bool $found Wether the key was found in the cache. Disambiguates a return of false, a storable value.
+	 *
+	 * @since 2.4.3
+	 *
+	 * @return mixed wp_cache_get if object caching is allowed. False otherwise.
+	 */
+	public function object_cache_get( $key, $group = 'theseoframework', $force = false, &$found = null ) {
+
+		if ( $this->use_object_cache )
+			return wp_cache_get( $key, $group, $force, $found );
+
+		return false;
+	}
+
+	/**
 	 * Well, this is annoying.
 	 *
 	 * @since 2.4.2
Index: inc/classes/metaboxes.class.php
===================================================================
--- inc/classes/metaboxes.class.php	(revision 1300916)
+++ inc/classes/metaboxes.class.php	(working copy)
@@ -167,12 +167,9 @@
 	 *
 	 * @since 2.2.2
 	 *
-	 * @uses globals $wpdb fetch post for the example
-	 *
 	 * @see $this->title_metabox()	Callback for Title Settings box.
 	 */
 	public function title_metabox() {
-		global $wpdb,$blog_id;
 
 		do_action( 'the_seo_framework_title_metabox_before' );
 
@@ -182,33 +179,10 @@
 		$example_right = '';
 		$recommended = ' class="recommended" title="' . __( 'Recommended', 'autodescription' ) . '"';
 
-		// Prepare array
-		$post_type = esc_sql( array( 'post', 'page' ) );
-		$post_type_in_string = "'" . implode( "','", $post_type ) . "'";
+		$latest_post_id = $this->get_latest_post_id();
 
-		// Prepare array
-		$post_status = esc_sql( array( 'publish', 'future', 'pending' ) );
-		$post_status_in_string = "'" . implode( "','", $post_status ) . "'";
-
-		$page_id = wp_cache_get( 'ad_latestpost_' . $blog_id, 'autodescription' );
-		if ( false === $page_id ) {
-			$sql = $wpdb->prepare(
-				"SELECT ID
-				FROM $wpdb->posts
-				WHERE post_title <> %s
-				AND post_type IN ($post_type_in_string)
-				AND post_date < NOW()
-				AND post_status IN ($post_status_in_string)
-				ORDER BY post_date DESC
-				LIMIT %d",
-				'', 1 );
-
-			$page_id = $wpdb->get_var( $sql );
-			wp_cache_set( 'ad_latestpost_' . $blog_id, $page_id, 'autodescription' );
-		}
-
-		if ( !empty( $page_id ) ) {
-			$post = get_post( (int) $page_id, OBJECT );
+		if ( !empty( $latest_post_id ) ) {
+			$post = get_post( (int) $latest_post_id, OBJECT );
 			$title = esc_attr( $post->post_title );
 		} else {
 			$title = __( 'Example Post Title', 'autodescription' );
Index: inc/classes/postdata.class.php
===================================================================
--- inc/classes/postdata.class.php	(revision 1300916)
+++ inc/classes/postdata.class.php	(working copy)
@@ -27,18 +27,6 @@
 class AutoDescription_PostData extends AutoDescription_Detect {
 
 	/**
-	 * StopWords array
-	 *
-	 * Holds words which hold low SEO value to be stripped or warned.
-	 *
-	 * Uses localisation
-	 *
-	 * @since ???
-	 * @todo
-	 */
-	protected $stopwords = array();
-
-	/**
 	 * Constructor, load parent constructor
 	 */
 	public function __construct() {
@@ -154,4 +142,53 @@
 		return (string) $output;
 	}
 
+	/**
+	 * Fetch latest public post ID.
+	 *
+	 * @staticvar int $page_id
+	 * @global object $wpdb
+	 * @global int $blog_id
+	 *
+	 * @since 2.4.3
+	 */
+	public function get_latest_post_id() {
+		global $wpdb, $blog_id;
+
+		static $page_id = null;
+
+		if ( isset( $page_id ) )
+			return $page_id;
+
+		$latest_posts_key = 'latest_post_id_' . $blog_id;
+
+		//* @TODO consider transient.
+		$page_id = $this->object_cache_get( $latest_posts_key );
+		if ( false === $page_id ) {
+
+			// Prepare array
+			$post_type = esc_sql( array( 'post', 'page' ) );
+			$post_type_in_string = "'" . implode( "','", $post_type ) . "'";
+
+			// Prepare array
+			$post_status = esc_sql( array( 'publish', 'future', 'pending' ) );
+			$post_status_in_string = "'" . implode( "','", $post_status ) . "'";
+
+			$sql = $wpdb->prepare(
+				"SELECT ID
+				FROM $wpdb->posts
+				WHERE post_title <> %s
+				AND post_type IN ($post_type_in_string)
+				AND post_date < NOW()
+				AND post_status IN ($post_status_in_string)
+				ORDER BY post_date DESC
+				LIMIT %d",
+				'', 1 );
+
+			$page_id = $wpdb->get_var( $sql );
+			$this->object_cache_set( $latest_posts_key, $page_id, 86400 );
+		}
+
+		return $page_id;
+	}
+
 }
Index: inc/classes/render.class.php
===================================================================
--- inc/classes/render.class.php	(revision 1302381)
+++ inc/classes/render.class.php	(working copy)
@@ -801,7 +801,7 @@
 		$this->setup_ld_json_transient( get_the_ID() );
 
 		/**
-		 * Debug key.
+		 * Debug transient key.
 		 * @since 2.4.2
 		 */
 		if ( defined( 'THE_SEO_FRAMEWORK_DEBUG' ) && THE_SEO_FRAMEWORK_DEBUG ) {
Index: inc/classes/sanitize.class.php
===================================================================
--- inc/classes/sanitize.class.php	(revision 1302381)
+++ inc/classes/sanitize.class.php	(working copy)
@@ -749,11 +749,13 @@
 				if ( $this->is_domainmapping_active() ) {
 					global $wpdb,$blog_id;
 
+					$mapped_key = 'wpmudev_mapped_domain_' . $blog_id;
+
 					//* Check if the domain is mapped
-					$mapped_domain = wp_cache_get( 'wap_mapped_domain_' . $blog_id, 'domain_mapping' );
+					$mapped_domain = $this->object_cache_get( $mapped_key );
 					if ( false === $mapped_domain ) {
-						$mapped_domain = $wpdb->get_var( $wpdb->prepare( "SELECT domain FROM {$wpdb->base_prefix}domain_mapping WHERE blog_id = %d", $blog_id ) ); //string
-						wp_cache_set( 'wap_mapped_domain_' . $blog_id, $mapped_domain, 'domain_mapping', 3600 ); // 1 hour
+						$mapped_domain = $wpdb->get_var( $wpdb->prepare( "SELECT domain FROM {$wpdb->base_prefix}domain_mapping WHERE blog_id = %d", $blog_id ) );
+						$this->object_cache_set( $mapped_key, $mapped_domain, 3600 );
 					}
 
 					if ( !empty( $mapped_domain ) ) {
@@ -760,17 +762,19 @@
 						//* Set that the domain is mapped
 						$ismapped = '1';
 
+						$scheme_key = 'wpmudev_mapped_scheme_' . $blog_id;
+
 						//* Fetch scheme
-						$mappedscheme = wp_cache_get( 'wap_mapped_scheme_' . $blog_id, 'domain_mapping' );
+						$mappedscheme = $this->object_cache_get( $scheme_key );
 						if ( false === $mappedscheme ) {
-							$mappedscheme = $wpdb->get_var( $wpdb->prepare( "SELECT scheme FROM {$wpdb->base_prefix}domain_mapping WHERE blog_id = %d", $blog_id ) ); //bool
-							wp_cache_set( 'wap_mapped_scheme_' . $blog_id, $mappedscheme, 'domain_mapping', 3600 ); // 1 hour
+							$mappedscheme = $wpdb->get_var( $wpdb->prepare( "SELECT scheme FROM {$wpdb->base_prefix}domain_mapping WHERE blog_id = %d", $blog_id ) );
+							$this->object_cache_set( $scheme_key, $mappedscheme, 3600 );
 						}
 
 						if ( $mappedscheme === '1' ) {
 							$scheme_full = 'https://';
 							$scheme = 'https';
-						} else if ( $mappedscheme === '0' ) {
+						} else {
 							$scheme_full = 'http://';
 							$scheme = 'http';
 						}
Index: inc/classes/search.class.php
===================================================================
--- inc/classes/search.class.php	(revision 1300916)
+++ inc/classes/search.class.php	(working copy)
@@ -44,11 +44,16 @@
 	 * @param array $args				Posts search arguments
 	 * @param array $protected_posts	Posts array with excluded key
 	 *
+	 * @global int $blog_id
+	 *
 	 * @since 2.1.7
 	 */
 	public function exclude_search_ids() {
+		global $blog_id;
 
-		$post_ids = wp_cache_get( 'exclude_search', 'autodescription' );
+		$cache_key = 'exclude_search_ids_' . $blog_id;
+
+		$post_ids = $this->ojbect_cache_get( $cache_key );
 		if ( false === $post_ids ) {
 			$post_ids = array();
 
@@ -66,7 +71,7 @@
 				$post_ids = wp_list_pluck( $protected_posts, 'ID' );
 			}
 
-			wp_cache_set( 'exclude_search', $post_ids, 'autodescription', 86400 );
+			$this->object_cache_set( $cache_key, $post_ids, 86400 );
 		}
 
 		// return an array of exclude post IDs
Index: inc/classes/sitemaps.class.php
===================================================================
--- inc/classes/sitemaps.class.php	(revision 1302381)
+++ inc/classes/sitemaps.class.php	(working copy)
@@ -272,15 +272,17 @@
 
 		$cpt = array();
 
-		$post_page = (array) get_post_types( array( 'public' => true ) );
-		foreach ( $post_page as $post_type ) {
-			if ( $post_type != 'post' && $post_type != 'page' && $post_type != 'attachment' ) {
-				if ( $this->post_type_supports_custom_seo( $post_type ) )
-					$cpt[] = $post_type;
+		if ( $total_cpt_posts ) {
+			$post_page = (array) get_post_types( array( 'public' => true ) );
+			foreach ( $post_page as $post_type ) {
+				if ( $post_type != 'post' && $post_type != 'page' && $post_type != 'attachment' ) {
+					if ( $this->post_type_supports_custom_seo( $post_type ) )
+						$cpt[] = $post_type;
+				}
 			}
 		}
 
-		if ( !empty( $cpt ) && $total_cpt_posts ) {
+		if ( $total_cpt_posts && !empty( $cpt ) ) {
 			//* Descend by the date for CPTs. The latest posts get to the top of the list after pages.
 			$args = array(
 				'numberposts' => $total_cpt_posts,
@@ -581,9 +583,12 @@
 	 *
 	 * @since 2.2.9
 	 *
+	 * @global int $blog_id;
+	 *
 	 * @todo maybe combine with noindex/noarchive/(nofollow) -> only when object caching?
 	 */
 	public function robots_txt( $robots_txt = '', $public = '' ) {
+		global $blog_id;
 
 		/**
 		 * Don't do anything if the blog isn't public
@@ -591,21 +596,32 @@
 		if ( '0' == $public )
 			return $robots_txt;
 
-		$blog_id = (string) get_current_blog_id();
+		$cache_key = 'robots_txt_output_' . $blog_id;
 
-		$output = wp_cache_get( 'the_seo_framework_robots_' . $blog_id, 'the_seo_framework' );
+		$output = $this->object_cache_get( $cache_key );
 		if ( false === $output ) {
 			$output = '';
 
-			$home_url = $this->the_url_from_cache( '', '0', false, false );
+			$scheme = is_ssl() ? 'https' : 'http';
+			$home_url = get_option( 'home' );
+			$home_url = $this->set_url_scheme( $home_url, $scheme );
+
 			$parse_url = parse_url( $home_url );
-			$path = ( !empty( $site_url['path'] ) ) ? $site_url['path'] : '';
 
+			$path = ! empty( $parse_url['path'] ) ? $parse_url['path'] : '';
+
 			//* Output defaults
 			$output .= "Disallow: $path/wp-includes/\r\n";
 
-			//* Prevents query indexing
-			$output .= "Disallow: $path/*?*\r\n";
+			/**
+			 * Prevents query indexing
+			 * @since 2.2.9
+			 *
+			 * Applies filters the_seo_framework_robots_allow_queries : Wether to allow queries for robots.
+			 * @since 2.4.3
+			 */
+			if ( ! (bool) apply_filters( 'the_seo_framework_robots_allow_queries', false ) )
+				$output .= "Disallow: $path/*?*\r\n";
 
 			//* Add whitespace
 			$output .= "\r\n";
@@ -613,12 +629,12 @@
 			if ( $this->get_option( 'sitemaps_output') &&  (bool) $this->get_option ( 'sitemaps_robots' ) ) {
 				//* Add sitemap full url
 				//* Becomes relative if host is empty.
-				$host = ( !empty( $parse_url['host'] ) ) ? $parse_url['host'] : '';
+				$host = ! empty( $parse_url['host'] ) ? $parse_url['host'] : '';
 				$scheme = ( !empty( $parse_url['scheme'] ) && !empty( $host ) ) ? $parse_url['scheme'] . '://' : '';
 				$output .= "Sitemap: $scheme$host/sitemap.xml\r\n";
 			}
 
-			wp_cache_set( 'the_seo_framework_robots_' . $blog_id , $output, 'the_seo_framework', 86400 ); // 24 hours
+			$this->object_cache_set( $cache_key, $output, 86400 );
 		}
 
 		$robots_txt .= $output;
Index: inc/classes/transients.class.php
===================================================================
--- inc/classes/transients.class.php	(revision 1302381)
+++ inc/classes/transients.class.php	(working copy)
@@ -141,7 +141,7 @@
 		 *
 		 * Use hex. e.g. 0, 1, 2, 9, a, b
 		 */
-		$revision = '0';
+		$revision = '1';
 
 		$this->ld_json_transient = 'the_seo_f' . $revision . '_ldjs_' . $cache_key;
 	}
Index: inc/functions/optionsapi.php
===================================================================
--- inc/functions/optionsapi.php	(revision 1302381)
+++ inc/functions/optionsapi.php	(working copy)
@@ -51,10 +51,11 @@
  * @return string|null The SEO Framework three point version number. (e.g. '2.2.5')
  */
 function the_seo_framework_version() {
+
 	if ( the_seo_framework_active() )
 		return THE_SEO_FRAMEWORK_VERSION;
 
-	return;
+	return null;
 }
 
 /**
@@ -117,7 +118,10 @@
 function tsf_wp_version( $version = '4.3.0', $compare = '>=' ) {
 	$theseoframework = the_seo_framework();
 
-	return $theseoframework->wp_version( $version, $compare );
+	if ( isset( $theseoframework ) )
+		return $theseoframework->wp_version( $version, $compare );
+
+	return null;
 }
 
 /**
@@ -130,7 +134,10 @@
 function tsf_options_pagehook() {
 	$theseoframework = the_seo_framework();
 
-	return $theseoframework->pagehook;
+	if ( isset( $theseoframework ) )
+		return $theseoframework->pagehook;
+
+	return null;
 }
 
 /**
@@ -146,18 +153,26 @@
 function tsf_get_option( $key, $use_cache = true ) {
 	$theseoframework = the_seo_framework();
 
-	return $theseoframework->get_option( $key, $use_cache );
+	if ( isset( $theseoframework ) )
+		return $theseoframework->get_option( $key, $use_cache );
+
+	return null;
 }
 
 /**
  * Fetch title from cache. Only works within Loop.
  *
+ * @param string|null $title the previous title
+ *
  * @since 2.4.2
  */
-function the_seo_framework_title_from_cache() {
+function the_seo_framework_title_from_cache( $title = null ) {
 	$theseoframework = the_seo_framework();
 
-	return $theseoframework->title_from_cache();
+	if ( isset( $theseoframework ) )
+		$title = $theseoframework->title_from_cache();
+
+	return $title;
 }
 
 /**
@@ -168,7 +183,10 @@
 function the_seo_framework_description_from_cache() {
 	$theseoframework = the_seo_framework();
 
-	return $theseoframework->description_from_cache();
+	if ( isset( $theseoframework ) )
+		return $theseoframework->description_from_cache();
+
+	return null;
 }
 
 /**
@@ -179,22 +197,8 @@
 function the_seo_framework_the_url_from_cache() {
 	$theseoframework = the_seo_framework();
 
-	return $theseoframework->the_url_from_cache();
-}
+	if ( isset( $theseoframework ) )
+		return $theseoframework->the_url_from_cache();
 
-if ( ! function_exists( 'the_seo_framework_title_from_cache' ) ) {
-	//* The SEO Framework 2.2.5+
-	if ( function_exists( 'the_seo_framework' ) ) {
-		function the_seo_framework_title_from_cache_temp() {
-			$the_seo_framework = the_seo_framework();
-
-			if ( isset( $the_seo_framework ) )
-				return $theseoframework->title_from_cache();
-		}
-
-		add_filter( 'avf_title_tag', 'the_seo_framework_title_from_cache_temp' );
-	}
-} else {
-	//* The SEO Framework 2.4.2+
-	add_filter( 'avf_title_tag', 'the_seo_framework_title_from_cache' );
+	return null;
 }
